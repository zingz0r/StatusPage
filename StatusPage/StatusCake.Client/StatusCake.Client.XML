<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StatusCake.Client</name>
    </assembly>
    <members>
        <member name="T:StatusCake.Client.Auth.StatusCakeAuth">
            <summary>
            A helper for loading the API auth configuration
            </summary>
        </member>
        <member name="P:StatusCake.Client.Auth.StatusCakeAuth.DefaultAccessKey">
            <summary>
            Get the configured StatusCake API access key
            </summary>
        </member>
        <member name="P:StatusCake.Client.Auth.StatusCakeAuth.DefaultUsername">
            <summary>
            Get the configured StatusCake API access username
            </summary>
        </member>
        <member name="T:StatusCake.Client.Enumerators.TestStatus">
            <summary>
            Available status values
            </summary>
        </member>
        <member name="F:StatusCake.Client.Enumerators.TestStatus.Up">
            <summary>
            Online
            </summary>
        </member>
        <member name="F:StatusCake.Client.Enumerators.TestStatus.Down">
            <summary>
            Offline
            </summary>
        </member>
        <member name="T:StatusCake.Client.Enumerators.TestType">
            <summary>
            Available status values
            </summary>
        </member>
        <member name="F:StatusCake.Client.Enumerators.TestType.Http">
            <summary>
            HTTP tests are great for testing any standard website that you would access using your browser. If you don't know what test type to use this one is likely the best option.
            </summary>
        </member>
        <member name="F:StatusCake.Client.Enumerators.TestType.Head">
            <summary>
            HEAD tests are like HTTP tests except they do not load the body of the site and instead of a GET/POST request only via a HEAD type; not all servers support this.
            </summary>
        </member>
        <member name="F:StatusCake.Client.Enumerators.TestType.Tcp">
            <summary>
            TCP tests can ping most services, including FTP, game servers, and a huge range more. Though it can ping HTTP, SMTP etc the dedicated test types are better suited for this.
            </summary>
        </member>
        <member name="F:StatusCake.Client.Enumerators.TestType.Dns">
            <summary>
            DNS tests ensure the system that directs visitors from your domain to your actual server is working correctly. If your DNS fails your users will not be able to access your site easily
            </summary>
        </member>
        <member name="F:StatusCake.Client.Enumerators.TestType.Smtp">
            <summary>
            SMTP tests check if your email server can send out mail as required.
            </summary>
        </member>
        <member name="F:StatusCake.Client.Enumerators.TestType.Ssh">
            <summary>
            SSH tests use a secure shell to login to your (most likely) unix based server; this checks if it's responding and usable
            </summary>
        </member>
        <member name="F:StatusCake.Client.Enumerators.TestType.Ping">
            <summary>
            PING tests send a ICMP ping to an IP. This can be a great way of testing routers or a basic way of testing a server is responding.
            </summary>
        </member>
        <member name="F:StatusCake.Client.Extensions.DateTimeExtensions.unixBaseTime">
            <summary>
            The unix greenwitchtime
            </summary>
        </member>
        <member name="M:StatusCake.Client.Extensions.DateTimeExtensions.ToUnix(System.DateTime)">
            <summary>
            Returns the UNIX timestamp representation of the current DateTime object
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="T:StatusCake.Client.Extensions.HttpWebResponseExtensions">
            <summary>
            A collection of extensions for the HttpWebRequest class
            </summary>
        </member>
        <member name="M:StatusCake.Client.Extensions.HttpWebResponseExtensions.GetResponseStringAsync(System.Net.HttpWebResponse)">
            <summary>
            Read the response string of the 
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:StatusCake.Client.Models.Alert">
            <summary>
            Status cake alert log object
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Alert.Triggered">
            <summary>
            The date and time when the alert was sent in GMT.
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Alert.StatusCode">
            <summary>
            The status code
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Alert.Unix">
            <summary>
            The linux timestamp
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Alert.Status">
            <summary>
            The status logged that triggered the alert
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Alert.TestID">
            <summary>
            The ID of the test that triggered the alert
            </summary>
        </member>
        <member name="T:StatusCake.Client.Models.Auth">
            <summary>
            StatusCake auth details
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Auth.Success">
            <summary>
            True if the authentication was successful
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Auth.Details">
            <summary>
            The details of the currently authenticated account
            </summary>
        </member>
        <member name="T:StatusCake.Client.Models.AuthDetails">
            <summary>
            Auth details class
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.AuthDetails.Username">
            <summary>
            The username of the authenticated user
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.AuthDetails.FirstName">
            <summary>
            The first name of the authenticated user
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.AuthDetails.LastName">
            <summary>
            The last name of the authenticated user
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.AuthDetails.Plan">
            <summary>
            The plan type of the authenticated account
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.AuthDetails.Timezone">
            <summary>
            The timezone of the authenticated user
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.AuthDetails.CountryCode">
            <summary>
            The country code of the authenticated user
            </summary>
        </member>
        <member name="T:StatusCake.Client.Models.CheckResult">
            <summary>
            Contains data from a check result
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.CheckResult.StatusCode">
            <summary>
            The status code of the check result
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.CheckResult.Time">
            <summary>
            The UNIX timestamp time of the check result
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.CheckResult.Human">
            <summary>
            Human readable timestamp. Converted to the timezone of the account
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.CheckResult.Location">
            <summary>
            The location from where the check was performed from
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.CheckResult.Headers">
            <summary>
            The response headers from the test taken
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.CheckResult.Performance">
            <summary>
            The execution time of the test in ms 
            </summary>
        </member>
        <member name="T:StatusCake.Client.Models.ContactGroup">
            <summary>
            A ContactGroup object with details about a status cake contact group
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.ContactGroup.GroupName">
            <summary>
            The name of the contact group
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.ContactGroup.Emails">
            <summary>
            The emails in use by the group
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.ContactGroup.Mobiles">
            <summary>
            The list of mobile numbers in use by the group
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.ContactGroup.Boxcar">
            <summary>
            The Boxcar account linked to the contact group
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.ContactGroup.Pushover">
            <summary>
            The Pushover account linked to the contact group
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.ContactGroup.ContactID">
            <summary>
            The ID of the contact ID
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.ContactGroup.PingURL">
            <summary>
            The webhook ping URL
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.ContactGroup.DesktopAlert">
            <summary>
            1 if the desktops alerts via AlertCake are enabled
            </summary>
        </member>
        <member name="T:StatusCake.Client.Models.DeleteTest">
            <summary>
            Contains data about deleting a response
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.DeleteTest.TestID">
            <summary>
            The ID of the test that has been deleted
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.DeleteTest.Affected">
            <summary>
            The number of rows deleted
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.DeleteTest.Success">
            <summary>
            If true, the deletion was successful
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.DeleteTest.Message">
            <summary>
            The message response
            </summary>
        </member>
        <member name="T:StatusCake.Client.Models.Period">
            <summary>
            TODO
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Period.Start">
            <summary>
            The start of the period
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Period.End">
            <summary>
            The end of the period. If this is 0000 00 00 it means the period is still ongoing.
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Period.Status">
            <summary>
            The status type
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Period.Additional">
            <summary>
            Additional information
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Period.PeriodText">
            <summary>
            Period time in text
            </summary>
        </member>
        <member name="T:StatusCake.Client.Models.TestUpdate">
            <summary>
            StatusCake test details
            </summary>
        </member>
        <member name="M:StatusCake.Client.Models.TestUpdate.#ctor(System.String,System.String,System.Int32,StatusCake.Client.Enumerators.TestType)">
            <summary>
            Create a new TestUpdate with the default values
            </summary>
        </member>
        <member name="M:StatusCake.Client.Models.TestUpdate.#ctor(StatusCake.Client.Models.Test,System.String,System.Int32)">
            <summary>
            Create a new TestUpdate with the current data from an existing test
            </summary>
        </member>
        <member name="M:StatusCake.Client.Models.TestUpdate.Initialize">
            <summary>
            Initialize the model with the default values
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.TestID">
            <summary>
            The unique ID of the test
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.Paused">
            <summary>
            True if the test is paused
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.TestType">
            <summary>
            The type of the test. Possible values: HTTP or TCP
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.WebsiteName">
            <summary>
            The name of the test
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.ContactGroupID">
            <summary>
            Contains the contact group or null if the group is not set
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.WebsiteURL">
            <summary>
            The URL of the website that will be tested
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.Port">
            <summary>
            The port where the website will be pinged
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.NodeLocations">
            <summary>
            The comma separated list of locations where the test will be ran from
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.Timeout">
            <summary>
            The timeout of the tests in seconds
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.PingURL">
            <summary>
            The URL to ping if a site goes down.
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.Confirmations">
            <summary>
            The number of confirmaion
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.CheckRate">
            <summary>
            The check rate at which the website will be tested
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.Public">
            <summary>
            Set to true to enable public reporting for the test
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.LogoImageUrl">
            <summary>
            The Url to the logo image in the public reporting
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.DisplayBranding">
            <summary>
            Set to true to enable public branding on the public reporting page
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.WebsiteHost">
            <summary>
            The website host
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.VirusCheckEnabled">
            <summary>
            Set to true to enable virus checking on the website
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.FindString">
            <summary>
            The string that the test should result should contain
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.DoNotFind">
            <summary>
            Set to true to invert the FindString value
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.TestWithRealBrowser">
            <summary>
            Set to true ti test the website with a real browser
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.TriggerRate">
            <summary>
            How many minutes to wait before sending an event
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.Tags">
            <summary>
            The tags linked to this test
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestUpdate.StatusCodes">
            <summary>
            The list of status codes that should trigger the error
            </summary>
        </member>
        <member name="T:StatusCake.Client.Models.Test">
            <summary>
            StatusCake test details
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Test.TestID">
            <summary>
            The unique ID of the test
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Test.Paused">
            <summary>
            True if the test is paused
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Test.TestType">
            <summary>
            The type of the test. Possible values: HTTP or TCP
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Test.WebsiteName">
            <summary>
            The name of the test
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Test.ContactGroup">
            <summary>
            Contains the contact group or null if the group is not set
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Test.ContactID">
            <summary>
            The contact ID the test is tied to
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Test.Status">
            <summary>
            Current status of the test. Possible values: Up, Down
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.Test.Uptime">
            <summary>
            The uptime percentage for the last 7 days
            </summary>
        </member>
        <member name="T:StatusCake.Client.Models.TestDetails">
            <summary>
            The details of a test
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.TestID">
            <summary>
            The unique ID of the test
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.Paused">
            <summary>
            True if the test is paused
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.TestType">
            <summary>
            The type of the test. Possible values: HTTP or TCP
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.WebsiteName">
            <summary>
            The name of the test
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.ContactGroup">
            <summary>
            Contains the contact group or null if the group is not set
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.ContactID">
            <summary>
            The contact ID the test is tied to
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.Status">
            <summary>
            Current status of the test. Possible values: Up, Down
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.Uptime">
            <summary>
            The uptime percentage for the last day
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.CheckRate">
            <summary>
            The check rate in seconds
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.Timeout">
            <summary>
            The test check timeout in seconds
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.LogoImage">
            <summary>
            The URL of the logo image for public reporting
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.WebsiteHost">
            <summary>
            User entered value for Website Host
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.NodeLocations">
            <summary>
            A list of locations selected to test from
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.FindString">
            <summary>
            The string the test will look for in the response
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.DoNotFind">
            <summary>
            If a string should be found or not be ound in the result
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.LastTested">
            <summary>
            The last time the test was ran
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.NextLocation">
            <summary>
            The next location where the test will be ran from
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.Processing">
            <summary>
            True if the website is currently being tested
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.ProcessingState">
            <summary>
            The current test status
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.ProcessingOn">
            <summary>
            The server that is processing the test
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.TestDetails.DownTimes">
            <summary>
            The amount of consecutive downtimes recorded for this test
            </summary>
        </member>
        <member name="T:StatusCake.Client.Models.PutResponse">
            <summary>
            Contains response data from a PUT request
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.PutResponse.Issues">
            <summary>
            A list of human readable reasons returned by the API
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.PutResponse.Success">
            <summary>
            True if the update was successful
            </summary>
        </member>
        <member name="P:StatusCake.Client.Models.PutResponse.Message">
            <summary>
            A human readable response message from the API
            </summary>
        </member>
        <member name="T:StatusCake.Client.StatusCakeClient">
            <summary>
            TODO
            </summary>
        </member>
        <member name="F:StatusCake.Client.StatusCakeClient.ApiEndpoint">
            <summary>
            The statuscake api endpoint url
            </summary>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.#ctor">
            <summary>
            Create a new StatusCakeClient object with the default credentials
            </summary>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.#ctor(System.String,System.String)">
            <summary>
            Create a new StatusCakeClient object with the given authentication credentials
            </summary>
        </member>
        <member name="F:StatusCake.Client.StatusCakeClient._defaultInstance">
            <summary>
            The default instance of StatusCakeClient that can be statically accessed
            </summary>
        </member>
        <member name="P:StatusCake.Client.StatusCakeClient.Instance">
            <summary>
            A default instance of the StatusCakeClient, using the credentials from the configuration file
            </summary>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetTestDetailsAsync(System.Int64)">
            <summary>
            Get the details of the test with the given test ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetTestsAsync">
            <summary>
            Get the list of all the tests in the client
            </summary>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetTestsAsync(System.Nullable{System.Int64},System.String)">
            <summary>
            Get the list of all the tests in the client optionally filtered by group ID and status
            </summary>
            <param name="contactGroupId">Filter to just the tests using the contact group ID. Set to null to skip this filter.</param>
            <param name="status">Filter to just the tests that currently have the given status. Set to null to skip this filter.</param>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetPeriodsAsync(System.Int64)">
            <summary>
            Get the list of all the periods linked to the test ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetCheckResultsAsync(System.Int64)">
            <summary>
            Get a list of all the check results for the given test
            </summary>
            <param name="testId">TODO</param>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetCheckResultsAsync(System.Int64,System.Int32)">
            <summary>
            Get a list of all the check results for the given test
            </summary>
            <param name="testId">TODO</param>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetCheckResultsAsync(System.Int64,System.String[])">
            <summary>
            Get a list of all the check results for the given test filtered by the given dataParameters
            </summary>
            <param name="testId">TODO</param>
            <param name="fields">TODO</param>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetCheckResultsAsync(System.Int64,System.String[],System.Nullable{System.DateTime})">
            <summary>
            Get a list of all the check results for the given test filtered by the given dataParameters
            </summary>
            <param name="testId">TODO</param>
            <param name="fields">TODO</param>
            <param name="startTime">TODO</param>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetCheckResultsAsync(System.Int64,System.String[],System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Get a list of all the check results for the given test filtered by the given dataParameters
            </summary>
            <param name="testId">TODO</param>
            <param name="fields">TODO</param>
            <param name="startTime">TODO</param>
            <param name="limit">TODO</param>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetAlertsAsync(System.Int64)">
            <summary>
            Get the list of all the alerts linked to the test
            </summary>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetAlertsAsync(System.Int64,System.Nullable{System.DateTime})">
            <summary>
            Get the list of all the alerts linked to the test
            </summary>
            <param name="testId">TODO</param>
            <param name="since">TODO</param>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetAuthDetailsAsync">
            <summary>
            Get the details of the currently authenticated user
            </summary>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetContactGroupsAsync">
            <summary>
            Get the details of the currently authenticated user
            </summary>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetUptimesAsync(System.Int64)">
            <summary>
            Get all uptime precentage per day since test creation
            </summary>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.DeleteTestAsync(System.Int64)">
            <summary>
            Get the details of the test with the given test ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.DeleteContactGroupAsync(System.Int64)">
            <summary>
            Get the details of the test with the given test ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.UpdateOrCreateContactGroupAsync(StatusCake.Client.Models.ContactGroup)">
            <summary>
            Update or create a new status cake ContactGroup
            </summary>
            <param name="contactGroup"></param>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.UpdateOrCreateTestAsync(StatusCake.Client.Models.TestUpdate)">
            <summary>
            Update or create a new status cake Test
            </summary>
            <param name="contactGroup"></param>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetAuthenticatedPutRequest(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Create an authenticated PUT request to the status cake API
            </summary>
            <returns></returns>
        </member>
        <member name="M:StatusCake.Client.StatusCakeClient.GetAuthenticationRequest(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Create an authenticated request to the status cake API
            </summary>
            <returns></returns>
        </member>
        <member name="T:StatusCake.Client.StatusCakeEndpoints">
            <summary>
            A collection of the StatusCake API endpoint names
            </summary>
        </member>
        <member name="F:StatusCake.Client.StatusCakeEndpoints.Tests">
            <summary>
            Tests endpoint
            </summary>
        </member>
        <member name="F:StatusCake.Client.StatusCakeEndpoints.TestsUpdate">
            <summary>
            Update test endpoint
            </summary>
        </member>
        <member name="F:StatusCake.Client.StatusCakeEndpoints.TestDetails">
            <summary>
            Test details endpoint
            </summary>
        </member>
        <member name="F:StatusCake.Client.StatusCakeEndpoints.TestChecks">
            <summary>
            Checks
            </summary>
        </member>
        <member name="F:StatusCake.Client.StatusCakeEndpoints.Auth">
            <summary>
            Auth endpoint
            </summary>
        </member>
        <member name="F:StatusCake.Client.StatusCakeEndpoints.Periods">
            <summary>
            Periods endpoint
            </summary>
        </member>
        <member name="F:StatusCake.Client.StatusCakeEndpoints.Alerts">
            <summary>
            Alerts
            </summary>
        </member>
        <member name="F:StatusCake.Client.StatusCakeEndpoints.ContactGroups">
            <summary>
            ContactGroups
            </summary>
        </member>
        <member name="F:StatusCake.Client.StatusCakeEndpoints.ContactGroupsUpdate">
            <summary>
            ContactGroups update
            </summary>
        </member>
        <member name="F:StatusCake.Client.Utils.DateTimeUtils.unixBaseTime">
            <summary>
            The unix greenwitchtime
            </summary>
        </member>
        <member name="M:StatusCake.Client.Utils.DateTimeUtils.FromUnix(System.Int64)">
            <summary>
            Get a DateTime object from a unix time 
            </summary>
            <param name="dateTime"></param>
            <param name="unixTime"></param>
            <returns></returns>
        </member>
    </members>
</doc>
